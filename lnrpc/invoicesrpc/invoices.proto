syntax = "proto3";

import "google/api/annotations.proto";
import "rpc.proto";

package invoicesrpc;

option go_package = "github.com/lightningnetwork/lnd/lnrpc/invoicesrpc";

// Invoices is a service that can be used to create, accept, settle and cancel
// invoices.
service Invoices {
    /**
    SubscribeSingleInvoice returns a uni-directional stream (server -> client)
    to notify the client of state transitions of the specified invoice.
    Initially the current invoice state is always sent out.
    */
    rpc SubscribeSingleInvoice (lnrpc.PaymentHash) returns (stream lnrpc.Invoice);

    rpc SettleInvoice(SettleInvoiceMsg) returns (SettleInvoiceResp);

    rpc CancelInvoice(CancelInvoiceMsg) returns (CancelInvoiceResp);
}

message SettleInvoiceMsg {
    /// Externally discovered pre-image that should be used to settle the hold invoice.
    bytes pre_image = 1;
} 
message SettleInvoiceResp {}


message CancelInvoiceMsg {
    /// Hash corresponding to the (hold) invoice to fail.
    bytes payment_hash = 1;
} 
message CancelInvoiceResp {}
