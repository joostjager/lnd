// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chainrpc/chainnotifier.proto

package chainrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfRequest struct {
	Txid                 []byte   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Script               []byte   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	NumConfs             uint32   `protobuf:"varint,3,opt,name=num_confs,json=numConfs,proto3" json:"num_confs,omitempty"`
	HeightHint           uint32   `protobuf:"varint,4,opt,name=height_hint,json=heightHint,proto3" json:"height_hint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfRequest) Reset()         { *m = ConfRequest{} }
func (m *ConfRequest) String() string { return proto.CompactTextString(m) }
func (*ConfRequest) ProtoMessage()    {}
func (*ConfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{0}
}
func (m *ConfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfRequest.Unmarshal(m, b)
}
func (m *ConfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfRequest.Marshal(b, m, deterministic)
}
func (dst *ConfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfRequest.Merge(dst, src)
}
func (m *ConfRequest) XXX_Size() int {
	return xxx_messageInfo_ConfRequest.Size(m)
}
func (m *ConfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfRequest proto.InternalMessageInfo

func (m *ConfRequest) GetTxid() []byte {
	if m != nil {
		return m.Txid
	}
	return nil
}

func (m *ConfRequest) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *ConfRequest) GetNumConfs() uint32 {
	if m != nil {
		return m.NumConfs
	}
	return 0
}

func (m *ConfRequest) GetHeightHint() uint32 {
	if m != nil {
		return m.HeightHint
	}
	return 0
}

type ConfDetails struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockHeight          uint32   `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	TxIndex              uint32   `protobuf:"varint,3,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	RawTx                []byte   `protobuf:"bytes,4,opt,name=raw_tx,json=rawTx,proto3" json:"raw_tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfDetails) Reset()         { *m = ConfDetails{} }
func (m *ConfDetails) String() string { return proto.CompactTextString(m) }
func (*ConfDetails) ProtoMessage()    {}
func (*ConfDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{1}
}
func (m *ConfDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfDetails.Unmarshal(m, b)
}
func (m *ConfDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfDetails.Marshal(b, m, deterministic)
}
func (dst *ConfDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfDetails.Merge(dst, src)
}
func (m *ConfDetails) XXX_Size() int {
	return xxx_messageInfo_ConfDetails.Size(m)
}
func (m *ConfDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ConfDetails proto.InternalMessageInfo

func (m *ConfDetails) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ConfDetails) GetBlockHeight() uint32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *ConfDetails) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *ConfDetails) GetRawTx() []byte {
	if m != nil {
		return m.RawTx
	}
	return nil
}

type Reorg struct {
	Depth                uint32   `protobuf:"varint,1,opt,name=depth,proto3" json:"depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reorg) Reset()         { *m = Reorg{} }
func (m *Reorg) String() string { return proto.CompactTextString(m) }
func (*Reorg) ProtoMessage()    {}
func (*Reorg) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{2}
}
func (m *Reorg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reorg.Unmarshal(m, b)
}
func (m *Reorg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reorg.Marshal(b, m, deterministic)
}
func (dst *Reorg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reorg.Merge(dst, src)
}
func (m *Reorg) XXX_Size() int {
	return xxx_messageInfo_Reorg.Size(m)
}
func (m *Reorg) XXX_DiscardUnknown() {
	xxx_messageInfo_Reorg.DiscardUnknown(m)
}

var xxx_messageInfo_Reorg proto.InternalMessageInfo

func (m *Reorg) GetDepth() uint32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

type ConfEvent struct {
	// Types that are valid to be assigned to Event:
	//	*ConfEvent_Conf
	//	*ConfEvent_Reorg
	Event                isConfEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfEvent) Reset()         { *m = ConfEvent{} }
func (m *ConfEvent) String() string { return proto.CompactTextString(m) }
func (*ConfEvent) ProtoMessage()    {}
func (*ConfEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{3}
}
func (m *ConfEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfEvent.Unmarshal(m, b)
}
func (m *ConfEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfEvent.Marshal(b, m, deterministic)
}
func (dst *ConfEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfEvent.Merge(dst, src)
}
func (m *ConfEvent) XXX_Size() int {
	return xxx_messageInfo_ConfEvent.Size(m)
}
func (m *ConfEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ConfEvent proto.InternalMessageInfo

type isConfEvent_Event interface {
	isConfEvent_Event()
}

type ConfEvent_Conf struct {
	Conf *ConfDetails `protobuf:"bytes,1,opt,name=conf,proto3,oneof"`
}

type ConfEvent_Reorg struct {
	Reorg *Reorg `protobuf:"bytes,2,opt,name=reorg,proto3,oneof"`
}

func (*ConfEvent_Conf) isConfEvent_Event() {}

func (*ConfEvent_Reorg) isConfEvent_Event() {}

func (m *ConfEvent) GetEvent() isConfEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *ConfEvent) GetConf() *ConfDetails {
	if x, ok := m.GetEvent().(*ConfEvent_Conf); ok {
		return x.Conf
	}
	return nil
}

func (m *ConfEvent) GetReorg() *Reorg {
	if x, ok := m.GetEvent().(*ConfEvent_Reorg); ok {
		return x.Reorg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ConfEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ConfEvent_OneofMarshaler, _ConfEvent_OneofUnmarshaler, _ConfEvent_OneofSizer, []interface{}{
		(*ConfEvent_Conf)(nil),
		(*ConfEvent_Reorg)(nil),
	}
}

func _ConfEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ConfEvent)
	// event
	switch x := m.Event.(type) {
	case *ConfEvent_Conf:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Conf); err != nil {
			return err
		}
	case *ConfEvent_Reorg:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reorg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ConfEvent.Event has unexpected type %T", x)
	}
	return nil
}

func _ConfEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ConfEvent)
	switch tag {
	case 1: // event.conf
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ConfDetails)
		err := b.DecodeMessage(msg)
		m.Event = &ConfEvent_Conf{msg}
		return true, err
	case 2: // event.reorg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reorg)
		err := b.DecodeMessage(msg)
		m.Event = &ConfEvent_Reorg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ConfEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ConfEvent)
	// event
	switch x := m.Event.(type) {
	case *ConfEvent_Conf:
		s := proto.Size(x.Conf)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ConfEvent_Reorg:
		s := proto.Size(x.Reorg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Outpoint struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Outpoint) Reset()         { *m = Outpoint{} }
func (m *Outpoint) String() string { return proto.CompactTextString(m) }
func (*Outpoint) ProtoMessage()    {}
func (*Outpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{4}
}
func (m *Outpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Outpoint.Unmarshal(m, b)
}
func (m *Outpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Outpoint.Marshal(b, m, deterministic)
}
func (dst *Outpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Outpoint.Merge(dst, src)
}
func (m *Outpoint) XXX_Size() int {
	return xxx_messageInfo_Outpoint.Size(m)
}
func (m *Outpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Outpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Outpoint proto.InternalMessageInfo

func (m *Outpoint) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Outpoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type SpendRequest struct {
	Outpoint             *Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Script               []byte    `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	HeightHint           uint32    `protobuf:"varint,3,opt,name=height_hint,json=heightHint,proto3" json:"height_hint,omitempty"`
	ConfDepth            uint32    `protobuf:"varint,4,opt,name=conf_depth,json=confDepth,proto3" json:"conf_depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SpendRequest) Reset()         { *m = SpendRequest{} }
func (m *SpendRequest) String() string { return proto.CompactTextString(m) }
func (*SpendRequest) ProtoMessage()    {}
func (*SpendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{5}
}
func (m *SpendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpendRequest.Unmarshal(m, b)
}
func (m *SpendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpendRequest.Marshal(b, m, deterministic)
}
func (dst *SpendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpendRequest.Merge(dst, src)
}
func (m *SpendRequest) XXX_Size() int {
	return xxx_messageInfo_SpendRequest.Size(m)
}
func (m *SpendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpendRequest proto.InternalMessageInfo

func (m *SpendRequest) GetOutpoint() *Outpoint {
	if m != nil {
		return m.Outpoint
	}
	return nil
}

func (m *SpendRequest) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

func (m *SpendRequest) GetHeightHint() uint32 {
	if m != nil {
		return m.HeightHint
	}
	return 0
}

func (m *SpendRequest) GetConfDepth() uint32 {
	if m != nil {
		return m.ConfDepth
	}
	return 0
}

type SpendDetails struct {
	SpendingOutpoint     *Outpoint `protobuf:"bytes,1,opt,name=spending_outpoint,json=spendingOutpoint,proto3" json:"spending_outpoint,omitempty"`
	RawSpendingTx        []byte    `protobuf:"bytes,3,opt,name=raw_spending_tx,json=rawSpendingTx,proto3" json:"raw_spending_tx,omitempty"`
	SpendingTxHash       []byte    `protobuf:"bytes,2,opt,name=spending_tx_hash,json=spendingTxHash,proto3" json:"spending_tx_hash,omitempty"`
	SpendingInputIndex   uint32    `protobuf:"varint,4,opt,name=spending_input_index,json=spendingInputIndex,proto3" json:"spending_input_index,omitempty"`
	SpendingHeight       uint32    `protobuf:"varint,5,opt,name=spending_height,json=spendingHeight,proto3" json:"spending_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SpendDetails) Reset()         { *m = SpendDetails{} }
func (m *SpendDetails) String() string { return proto.CompactTextString(m) }
func (*SpendDetails) ProtoMessage()    {}
func (*SpendDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{6}
}
func (m *SpendDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpendDetails.Unmarshal(m, b)
}
func (m *SpendDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpendDetails.Marshal(b, m, deterministic)
}
func (dst *SpendDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpendDetails.Merge(dst, src)
}
func (m *SpendDetails) XXX_Size() int {
	return xxx_messageInfo_SpendDetails.Size(m)
}
func (m *SpendDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_SpendDetails.DiscardUnknown(m)
}

var xxx_messageInfo_SpendDetails proto.InternalMessageInfo

func (m *SpendDetails) GetSpendingOutpoint() *Outpoint {
	if m != nil {
		return m.SpendingOutpoint
	}
	return nil
}

func (m *SpendDetails) GetRawSpendingTx() []byte {
	if m != nil {
		return m.RawSpendingTx
	}
	return nil
}

func (m *SpendDetails) GetSpendingTxHash() []byte {
	if m != nil {
		return m.SpendingTxHash
	}
	return nil
}

func (m *SpendDetails) GetSpendingInputIndex() uint32 {
	if m != nil {
		return m.SpendingInputIndex
	}
	return 0
}

func (m *SpendDetails) GetSpendingHeight() uint32 {
	if m != nil {
		return m.SpendingHeight
	}
	return 0
}

type SpendEvent struct {
	// Types that are valid to be assigned to Event:
	//	*SpendEvent_Spend
	//	*SpendEvent_Reorg
	Event                isSpendEvent_Event `protobuf_oneof:"event"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SpendEvent) Reset()         { *m = SpendEvent{} }
func (m *SpendEvent) String() string { return proto.CompactTextString(m) }
func (*SpendEvent) ProtoMessage()    {}
func (*SpendEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{7}
}
func (m *SpendEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpendEvent.Unmarshal(m, b)
}
func (m *SpendEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpendEvent.Marshal(b, m, deterministic)
}
func (dst *SpendEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpendEvent.Merge(dst, src)
}
func (m *SpendEvent) XXX_Size() int {
	return xxx_messageInfo_SpendEvent.Size(m)
}
func (m *SpendEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SpendEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SpendEvent proto.InternalMessageInfo

type isSpendEvent_Event interface {
	isSpendEvent_Event()
}

type SpendEvent_Spend struct {
	Spend *SpendDetails `protobuf:"bytes,1,opt,name=spend,proto3,oneof"`
}

type SpendEvent_Reorg struct {
	Reorg *Reorg `protobuf:"bytes,2,opt,name=reorg,proto3,oneof"`
}

func (*SpendEvent_Spend) isSpendEvent_Event() {}

func (*SpendEvent_Reorg) isSpendEvent_Event() {}

func (m *SpendEvent) GetEvent() isSpendEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *SpendEvent) GetSpend() *SpendDetails {
	if x, ok := m.GetEvent().(*SpendEvent_Spend); ok {
		return x.Spend
	}
	return nil
}

func (m *SpendEvent) GetReorg() *Reorg {
	if x, ok := m.GetEvent().(*SpendEvent_Reorg); ok {
		return x.Reorg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SpendEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SpendEvent_OneofMarshaler, _SpendEvent_OneofUnmarshaler, _SpendEvent_OneofSizer, []interface{}{
		(*SpendEvent_Spend)(nil),
		(*SpendEvent_Reorg)(nil),
	}
}

func _SpendEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SpendEvent)
	// event
	switch x := m.Event.(type) {
	case *SpendEvent_Spend:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Spend); err != nil {
			return err
		}
	case *SpendEvent_Reorg:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reorg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SpendEvent.Event has unexpected type %T", x)
	}
	return nil
}

func _SpendEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SpendEvent)
	switch tag {
	case 1: // event.spend
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SpendDetails)
		err := b.DecodeMessage(msg)
		m.Event = &SpendEvent_Spend{msg}
		return true, err
	case 2: // event.reorg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reorg)
		err := b.DecodeMessage(msg)
		m.Event = &SpendEvent_Reorg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SpendEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SpendEvent)
	// event
	switch x := m.Event.(type) {
	case *SpendEvent_Spend:
		s := proto.Size(x.Spend)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SpendEvent_Reorg:
		s := proto.Size(x.Reorg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type BlockEpoch struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height               uint32   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockEpoch) Reset()         { *m = BlockEpoch{} }
func (m *BlockEpoch) String() string { return proto.CompactTextString(m) }
func (*BlockEpoch) ProtoMessage()    {}
func (*BlockEpoch) Descriptor() ([]byte, []int) {
	return fileDescriptor_chainnotifier_3b15824e422e1f4d, []int{8}
}
func (m *BlockEpoch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockEpoch.Unmarshal(m, b)
}
func (m *BlockEpoch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockEpoch.Marshal(b, m, deterministic)
}
func (dst *BlockEpoch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockEpoch.Merge(dst, src)
}
func (m *BlockEpoch) XXX_Size() int {
	return xxx_messageInfo_BlockEpoch.Size(m)
}
func (m *BlockEpoch) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockEpoch.DiscardUnknown(m)
}

var xxx_messageInfo_BlockEpoch proto.InternalMessageInfo

func (m *BlockEpoch) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *BlockEpoch) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfRequest)(nil), "chainrpc.ConfRequest")
	proto.RegisterType((*ConfDetails)(nil), "chainrpc.ConfDetails")
	proto.RegisterType((*Reorg)(nil), "chainrpc.Reorg")
	proto.RegisterType((*ConfEvent)(nil), "chainrpc.ConfEvent")
	proto.RegisterType((*Outpoint)(nil), "chainrpc.Outpoint")
	proto.RegisterType((*SpendRequest)(nil), "chainrpc.SpendRequest")
	proto.RegisterType((*SpendDetails)(nil), "chainrpc.SpendDetails")
	proto.RegisterType((*SpendEvent)(nil), "chainrpc.SpendEvent")
	proto.RegisterType((*BlockEpoch)(nil), "chainrpc.BlockEpoch")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChainNotifierClient is the client API for ChainNotifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChainNotifierClient interface {
	RegisterConfirmationsNtfn(ctx context.Context, in *ConfRequest, opts ...grpc.CallOption) (ChainNotifier_RegisterConfirmationsNtfnClient, error)
	RegisterSpendNtfn(ctx context.Context, in *SpendRequest, opts ...grpc.CallOption) (ChainNotifier_RegisterSpendNtfnClient, error)
	RegisterBlockEpochNtfn(ctx context.Context, in *BlockEpoch, opts ...grpc.CallOption) (ChainNotifier_RegisterBlockEpochNtfnClient, error)
}

type chainNotifierClient struct {
	cc *grpc.ClientConn
}

func NewChainNotifierClient(cc *grpc.ClientConn) ChainNotifierClient {
	return &chainNotifierClient{cc}
}

func (c *chainNotifierClient) RegisterConfirmationsNtfn(ctx context.Context, in *ConfRequest, opts ...grpc.CallOption) (ChainNotifier_RegisterConfirmationsNtfnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChainNotifier_serviceDesc.Streams[0], "/chainrpc.ChainNotifier/RegisterConfirmationsNtfn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chainNotifierRegisterConfirmationsNtfnClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChainNotifier_RegisterConfirmationsNtfnClient interface {
	Recv() (*ConfEvent, error)
	grpc.ClientStream
}

type chainNotifierRegisterConfirmationsNtfnClient struct {
	grpc.ClientStream
}

func (x *chainNotifierRegisterConfirmationsNtfnClient) Recv() (*ConfEvent, error) {
	m := new(ConfEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chainNotifierClient) RegisterSpendNtfn(ctx context.Context, in *SpendRequest, opts ...grpc.CallOption) (ChainNotifier_RegisterSpendNtfnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChainNotifier_serviceDesc.Streams[1], "/chainrpc.ChainNotifier/RegisterSpendNtfn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chainNotifierRegisterSpendNtfnClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChainNotifier_RegisterSpendNtfnClient interface {
	Recv() (*SpendEvent, error)
	grpc.ClientStream
}

type chainNotifierRegisterSpendNtfnClient struct {
	grpc.ClientStream
}

func (x *chainNotifierRegisterSpendNtfnClient) Recv() (*SpendEvent, error) {
	m := new(SpendEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chainNotifierClient) RegisterBlockEpochNtfn(ctx context.Context, in *BlockEpoch, opts ...grpc.CallOption) (ChainNotifier_RegisterBlockEpochNtfnClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChainNotifier_serviceDesc.Streams[2], "/chainrpc.ChainNotifier/RegisterBlockEpochNtfn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chainNotifierRegisterBlockEpochNtfnClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChainNotifier_RegisterBlockEpochNtfnClient interface {
	Recv() (*BlockEpoch, error)
	grpc.ClientStream
}

type chainNotifierRegisterBlockEpochNtfnClient struct {
	grpc.ClientStream
}

func (x *chainNotifierRegisterBlockEpochNtfnClient) Recv() (*BlockEpoch, error) {
	m := new(BlockEpoch)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChainNotifierServer is the server API for ChainNotifier service.
type ChainNotifierServer interface {
	RegisterConfirmationsNtfn(*ConfRequest, ChainNotifier_RegisterConfirmationsNtfnServer) error
	RegisterSpendNtfn(*SpendRequest, ChainNotifier_RegisterSpendNtfnServer) error
	RegisterBlockEpochNtfn(*BlockEpoch, ChainNotifier_RegisterBlockEpochNtfnServer) error
}

func RegisterChainNotifierServer(s *grpc.Server, srv ChainNotifierServer) {
	s.RegisterService(&_ChainNotifier_serviceDesc, srv)
}

func _ChainNotifier_RegisterConfirmationsNtfn_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConfRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChainNotifierServer).RegisterConfirmationsNtfn(m, &chainNotifierRegisterConfirmationsNtfnServer{stream})
}

type ChainNotifier_RegisterConfirmationsNtfnServer interface {
	Send(*ConfEvent) error
	grpc.ServerStream
}

type chainNotifierRegisterConfirmationsNtfnServer struct {
	grpc.ServerStream
}

func (x *chainNotifierRegisterConfirmationsNtfnServer) Send(m *ConfEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _ChainNotifier_RegisterSpendNtfn_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SpendRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChainNotifierServer).RegisterSpendNtfn(m, &chainNotifierRegisterSpendNtfnServer{stream})
}

type ChainNotifier_RegisterSpendNtfnServer interface {
	Send(*SpendEvent) error
	grpc.ServerStream
}

type chainNotifierRegisterSpendNtfnServer struct {
	grpc.ServerStream
}

func (x *chainNotifierRegisterSpendNtfnServer) Send(m *SpendEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _ChainNotifier_RegisterBlockEpochNtfn_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BlockEpoch)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChainNotifierServer).RegisterBlockEpochNtfn(m, &chainNotifierRegisterBlockEpochNtfnServer{stream})
}

type ChainNotifier_RegisterBlockEpochNtfnServer interface {
	Send(*BlockEpoch) error
	grpc.ServerStream
}

type chainNotifierRegisterBlockEpochNtfnServer struct {
	grpc.ServerStream
}

func (x *chainNotifierRegisterBlockEpochNtfnServer) Send(m *BlockEpoch) error {
	return x.ServerStream.SendMsg(m)
}

var _ChainNotifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chainrpc.ChainNotifier",
	HandlerType: (*ChainNotifierServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterConfirmationsNtfn",
			Handler:       _ChainNotifier_RegisterConfirmationsNtfn_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RegisterSpendNtfn",
			Handler:       _ChainNotifier_RegisterSpendNtfn_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RegisterBlockEpochNtfn",
			Handler:       _ChainNotifier_RegisterBlockEpochNtfn_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chainrpc/chainnotifier.proto",
}

func init() {
	proto.RegisterFile("chainrpc/chainnotifier.proto", fileDescriptor_chainnotifier_3b15824e422e1f4d)
}

var fileDescriptor_chainnotifier_3b15824e422e1f4d = []byte{
	// 602 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xad, 0xbf, 0xc6, 0x69, 0x32, 0x49, 0xbe, 0xb4, 0x4b, 0x1a, 0xa5, 0x85, 0x8a, 0xe2, 0x03,
	0x8d, 0x84, 0x14, 0xa2, 0xc0, 0x81, 0x1b, 0x52, 0x43, 0x51, 0x72, 0x29, 0xd2, 0xb6, 0x77, 0xcb,
	0x75, 0x36, 0xf1, 0x42, 0xb3, 0x36, 0xde, 0x0d, 0xf1, 0x95, 0x3f, 0xc1, 0x5f, 0xe4, 0x4f, 0x70,
	0x40, 0x3b, 0xbb, 0xeb, 0xa4, 0x51, 0x91, 0x10, 0x37, 0xcf, 0xcc, 0xf3, 0x9b, 0x79, 0x33, 0xcf,
	0x86, 0x67, 0x71, 0x12, 0x71, 0x91, 0x67, 0xf1, 0x6b, 0x7c, 0x10, 0xa9, 0xe2, 0x73, 0xce, 0xf2,
	0x41, 0x96, 0xa7, 0x2a, 0x25, 0x35, 0x57, 0x0d, 0xd6, 0xd0, 0x18, 0xa7, 0x62, 0x4e, 0xd9, 0xd7,
	0x15, 0x93, 0x8a, 0x10, 0xa8, 0xa8, 0x82, 0xcf, 0x7a, 0xde, 0xb9, 0xd7, 0x6f, 0x52, 0x7c, 0x26,
	0x5d, 0xa8, 0xca, 0x38, 0xe7, 0x99, 0xea, 0xfd, 0x87, 0x59, 0x1b, 0x91, 0xa7, 0x50, 0x17, 0xab,
	0x65, 0x18, 0xa7, 0x62, 0x2e, 0x7b, 0xfb, 0xe7, 0x5e, 0xbf, 0x45, 0x6b, 0x62, 0xb5, 0xd4, 0x74,
	0x92, 0x3c, 0x87, 0x46, 0xc2, 0xf8, 0x22, 0x51, 0x61, 0xc2, 0x85, 0xea, 0x55, 0xb0, 0x0c, 0x26,
	0x35, 0xe1, 0x42, 0x05, 0xdf, 0x3d, 0xd3, 0xf9, 0x03, 0x53, 0x11, 0xbf, 0x97, 0xe4, 0x0c, 0xe0,
	0xee, 0x3e, 0x8d, 0xbf, 0x84, 0x49, 0x24, 0x13, 0xdb, 0xbf, 0x8e, 0x99, 0x49, 0x24, 0x13, 0xf2,
	0x02, 0x9a, 0xb6, 0x8c, 0x14, 0x38, 0x4a, 0x8b, 0x36, 0x0c, 0x00, 0x53, 0xe4, 0x04, 0x6a, 0xaa,
	0x08, 0xb9, 0x98, 0xb1, 0xc2, 0x8e, 0x73, 0xa0, 0x8a, 0xa9, 0x0e, 0xc9, 0x31, 0x54, 0xf3, 0x68,
	0x1d, 0xaa, 0x02, 0x07, 0x69, 0x52, 0x3f, 0x8f, 0xd6, 0xb7, 0x45, 0x70, 0x06, 0x3e, 0x65, 0x69,
	0xbe, 0x20, 0x1d, 0xf0, 0x67, 0x2c, 0x53, 0xa6, 0x6f, 0x8b, 0x9a, 0x20, 0xf8, 0x0c, 0x75, 0x3d,
	0xe1, 0xd5, 0x37, 0x26, 0x14, 0x79, 0x05, 0x15, 0xad, 0x14, 0x11, 0x8d, 0xd1, 0xf1, 0xc0, 0x6d,
	0x70, 0xb0, 0x25, 0x62, 0xb2, 0x47, 0x11, 0x44, 0x2e, 0xc0, 0xcf, 0x35, 0x31, 0x8e, 0xd9, 0x18,
	0xb5, 0x37, 0x68, 0xec, 0x37, 0xd9, 0xa3, 0xa6, 0x7e, 0x79, 0x00, 0x3e, 0xd3, 0xf4, 0xc1, 0x5b,
	0xa8, 0x7d, 0x5a, 0xa9, 0x2c, 0xe5, 0x02, 0x8f, 0xb0, 0xb5, 0x04, 0x7c, 0xd6, 0x13, 0x1a, 0x65,
	0x46, 0xb8, 0x09, 0x82, 0x1f, 0x1e, 0x34, 0x6f, 0x32, 0x26, 0x66, 0xee, 0x7e, 0x03, 0xa8, 0xa5,
	0x96, 0xc6, 0x4e, 0x4a, 0x36, 0xbd, 0x5d, 0x03, 0x5a, 0x62, 0xfe, 0x78, 0xdb, 0x9d, 0xf3, 0xed,
	0xef, 0x9e, 0x4f, 0x9f, 0x4b, 0x2b, 0x0d, 0xcd, 0xda, 0xcc, 0x79, 0xeb, 0x31, 0xae, 0x42, 0xaf,
	0xee, 0x97, 0x1b, 0xcc, 0x9d, 0xf7, 0x3d, 0x1c, 0x49, 0x1d, 0x73, 0xb1, 0x08, 0xff, 0x62, 0xc2,
	0x43, 0x07, 0x2e, 0x97, 0xf2, 0x12, 0xda, 0xfa, 0x84, 0x25, 0x89, 0x32, 0x47, 0x6e, 0xd2, 0x56,
	0x1e, 0xad, 0x6f, 0x6c, 0xf6, 0xb6, 0x20, 0x7d, 0x38, 0xdc, 0xc2, 0x18, 0x37, 0x19, 0x6d, 0xff,
	0xcb, 0x12, 0x85, 0x96, 0x1a, 0x42, 0xa7, 0x44, 0x72, 0x91, 0xad, 0x94, 0xf5, 0x8e, 0x11, 0x43,
	0x5c, 0x6d, 0xaa, 0x4b, 0xc6, 0x46, 0x17, 0xd0, 0x2e, 0xdf, 0xb0, 0x3e, 0xf4, 0x11, 0x5c, 0x52,
	0x1b, 0x2b, 0x06, 0x02, 0x00, 0x47, 0x32, 0xd6, 0x19, 0x80, 0x8f, 0x75, 0xab, 0xb7, 0xbb, 0xd1,
	0xbb, 0xbd, 0x22, 0x6d, 0x0a, 0x84, 0xfd, 0x83, 0x7b, 0xde, 0x01, 0x5c, 0xea, 0x2f, 0xe1, 0x2a,
	0x4b, 0xe3, 0xe4, 0x51, 0xff, 0x74, 0xa1, 0xfa, 0xe0, 0xcb, 0xb1, 0xd1, 0xe8, 0xa7, 0x07, 0xad,
	0xb1, 0xa6, 0xbf, 0xb6, 0x7f, 0x08, 0x32, 0x85, 0x13, 0xca, 0x16, 0x5c, 0x2a, 0x96, 0x6b, 0x6b,
	0xf3, 0x7c, 0x19, 0x29, 0x9e, 0x0a, 0x79, 0xad, 0xe6, 0x82, 0xec, 0xf8, 0xde, 0xda, 0xee, 0xf4,
	0xc9, 0xc3, 0x34, 0xca, 0x1e, 0x7a, 0x64, 0x0c, 0x47, 0x8e, 0x0a, 0x95, 0x22, 0xc5, 0xae, 0x7c,
	0xc7, 0xd1, 0xd9, 0xc9, 0x3b, 0x92, 0x8f, 0xd0, 0x75, 0x24, 0x1b, 0x8d, 0xc8, 0xb4, 0xf5, 0xc6,
	0xa6, 0x72, 0xfa, 0x68, 0x76, 0xe8, 0xdd, 0x55, 0xf1, 0xd7, 0xf7, 0xe6, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa3, 0xc6, 0x49, 0x02, 0x1a, 0x05, 0x00, 0x00,
}
